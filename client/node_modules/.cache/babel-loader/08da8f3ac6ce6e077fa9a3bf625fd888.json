{"remainingRequest":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\ImageWall.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\ImageWall.vue","mtime":1640168754131},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\babel.config.js","mtime":1636396230048},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640165327016},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1640165324120},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640165327016},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1640165341316}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJbWFnZVdhbGwnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBEaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgZmlsZXM6ICcnLAogICAgICBjYXB0aW9uOiAnJywKICAgICAgZnVsbHNjcmVlbkxvYWRpbmc6IHRydWUsCiAgICAgIGltYWdlbGlzdDogW10sCiAgICAgIHNob3dWaWV3ZXI6IGZhbHNlLAogICAgICB2aWV3X2luZGV4OiAwLAogICAgICBzcmNMaXN0OiBbXSwKICAgICAgY29tbWVudHM6IFtdLAogICAgICBsaWtlQ291bnQ6IFtdCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIGluZm86IHt9CiAgfSwKICBtZXRob2RzOiB7CiAgICBVcGxvYWRDbGljazogZnVuY3Rpb24gVXBsb2FkQ2xpY2soKSB7CiAgICAgIHRoaXMuRGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgZ2V0UG9zdDogZnVuY3Rpb24gZ2V0UG9zdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuaW1hZ2VsaXN0ID0gW107CiAgICAgIHRoaXMuc3JjTGlzdCA9IFtdOwogICAgICB0aGlzLmZ1bGxzY3JlZW5Mb2FkaW5nID0gdHJ1ZTsKICAgICAgYXhpb3MucG9zdCgnL2FwaS9xdWVyeS1hbGwtcG9zdCcsIHsKICAgICAgICBncm91cF9pZDogdGhpcy4kcHJvcHMuaW5mby5pZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgcG9zdHMgPSBbXTsKCiAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cykgewogICAgICAgICAgcG9zdHMgPSByZXMuZGF0YS5wb3N0X2xpc3Q7CiAgICAgICAgICBjb25zb2xlLmxvZyhwb3N0cyk7CgogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb3N0cy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgICAgdmFyIHNyYyA9ICcvYXBpL3Nob3cvJyArIF90aGlzLiRwcm9wcy5pbmZvLmlkICsgJy8nICsgcG9zdHNbaV0ubWVkaWE7CiAgICAgICAgICAgIHZhciB0bXAgPSB7fTsKICAgICAgICAgICAgdG1wLnNyYyA9IHNyYzsKICAgICAgICAgICAgdG1wLnBvc3RfaWQgPSBwb3N0c1tpXS5pZDsKICAgICAgICAgICAgdG1wLmNhcHRpb24gPSBwb3N0c1tpXS5jYXB0aW9uOwogICAgICAgICAgICB0bXAuZGF0ZV9jcmVhdGVkID0gcG9zdHNbaV0uZGF0ZV9jcmVhdGVkOwogICAgICAgICAgICB0bXAubGlrZSA9IHBvc3RzW2ldLmxpa2U7CiAgICAgICAgICAgIF90aGlzLmxpa2VDb3VudFtpXSA9IHRtcC5saWtlOwogICAgICAgICAgICB0bXAudXNlcl9pZCA9IHBvc3RzW2ldLnVzZXJfaWQ7CiAgICAgICAgICAgIHRtcC51c2VybmFtZSA9IHBvc3RzW2ldLnVzZXJuYW1lOwoKICAgICAgICAgICAgX3RoaXMuaW1hZ2VsaXN0LnB1c2godG1wKTsKCiAgICAgICAgICAgIF90aGlzLnNyY0xpc3QucHVzaChzcmMpOwogICAgICAgICAgfQoKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmltYWdlbGlzdCk7CiAgICAgICAgICBfdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgY29uc29sZS5sb2coJ2xpa2UgY291bnQgaGVyZScpOwogICAgICAgICAgY29uc29sZS5sb2coX3RoaXMubGlrZUNvdW50KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0sCiAgICBsaWtlOiBmdW5jdGlvbiBsaWtlKHBpYykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoJy9hcGkvcXVlcnktbGlrZScsIHsKICAgICAgICBwb3N0X2lkOiBwaWMucG9zdF9pZCwKICAgICAgICB1c2VyX2lkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcmlkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgIGlmIChyZXMuZGF0YS5saWtlZCkgewogICAgICAgICAgICBheGlvcy5wb3N0KCcvYXBpL2NhbmNlbC1saWtlJywgewogICAgICAgICAgICAgIHBvc3RfaWQ6IHBpYy5wb3N0X2lkLAogICAgICAgICAgICAgIHVzZXJfaWQ6IF90aGlzMi4kcm91dGUucGFyYW1zLnVzZXJpZAogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMyKSB7CiAgICAgICAgICAgICAgaWYgKHJlczIuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+S9oOW3sueCuei1nuatpOW4lu+8jOWPlua2iOeCuei1nicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMi5nZXRQb3N0KCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyMikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycjIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGF4aW9zLnBvc3QoJy9hcGkvbGlrZS1wb3N0JywgewogICAgICAgICAgICAgIHBvc3RfaWQ6IHBpYy5wb3N0X2lkLAogICAgICAgICAgICAgIHVzZXJfaWQ6IF90aGlzMi4kcm91dGUucGFyYW1zLnVzZXJpZAogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMyKSB7CiAgICAgICAgICAgICAgaWYgKHJlczIuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdMaWtlZCcpOwoKICAgICAgICAgICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+aIkOWKn+eCuei1nicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIF90aGlzMi5nZXRQb3N0KCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyMikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycjIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0sCiAgICB2aWV3UGhvdG86IGZ1bmN0aW9uIHZpZXdQaG90byhpdGVtKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3ZpZXdQaG90bycsIGl0ZW0pOyAvLyBheGlvcy5wb3N0KCcvYXBpL3F1ZXJ5LWNvbW1lbnQnLCB7IHBvc3RfaWQ6IHBpYy5wb3N0X2lkIH0pCiAgICAgIC8vICAgLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cykgewogICAgICAvLyAgICAgICB0aGlzLmNvbW1lbnRzID0gcmVzLmRhdGEuY29tbWVudHNfbGlzdDsKICAgICAgLy8gICAgICAgY29uc29sZS5sb2codGhpcy5jb21tZW50cyk7CiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgfSkKICAgICAgLy8gICAuY2F0Y2goKGVycikgPT4gewogICAgICAvLyAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgLy8gICB9KTsKICAgIH0sCiAgICBoYW5kbGVGaWxlVXBsb2FkOiBmdW5jdGlvbiBoYW5kbGVGaWxlVXBsb2FkKCkgewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmcKICAgICAgdGhpcy5maWxlcyA9IHRoaXMuJHJlZnMuZmlsZXMuZmlsZXM7CiAgICB9LAogICAgU3VibWl0RmlsZTogZnVuY3Rpb24gU3VibWl0RmlsZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLkRpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IHRydWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3QKCiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdmFycy1vbi10b3AKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5maWxlcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciBmaWxlID0gdGhpcy5maWxlc1tpXTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci10ZW1wbGF0ZQoKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVzW10nLCBmaWxlKTsKICAgICAgfQoKICAgICAgZm9ybURhdGEuYXBwZW5kKCd1c2VyX2lkJywgdGhpcy4kcm91dGUucGFyYW1zLnVzZXJpZCk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZ3JvdXBfaWQnLCB0aGlzLiRwcm9wcy5pbmZvLmlkKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdjYXB0aW9uJywgdGhpcy5jYXB0aW9uKTsKICAgICAgYXhpb3MucG9zdCgnL2FwaS91cGxvYWQtcG9zdCcsIGZvcm1EYXRhLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1hcnJvdy1jYWxsYmFjawoKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cykgewogICAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICBtZXNzYWdlOiAn5oiQ5Yqf5LiK5LygJwogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXMzLmdldFBvc3QoKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFBvc3QoKTsKICB9Cn07"},{"version":3,"sources":["ImageWall.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n       <el-button icon=\"el-icon-folder-add\" type=\"primary\" @click=\"UploadClick\"> 上传照片</el-button>\n      <el-dialog title=\"上传照片\" :visible.sync=\"DialogVisible\">\n         <label>Files\n        <input type=\"file\" id=\"files\" ref=\"files\" multiple v-on:change=\"handleFileUpload( $event )\"/>\n      </label>\n      <label>Caption\n        <input type=\"text\" v-model=\"caption\"/>\n      </label>\n      <br>\n        <el-button @click=\"DialogVisible = false\">取 消</el-button>\n      <el-button icon=\"el-icon-upload\" v-on:click=\"SubmitFile()\" type=\"primary\" >Submit</el-button>\n      </el-dialog>\n    </div>\n    <el-row :gutter=\"20\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n          <el-col :span=\"4\" v-for=\"item in imagelist\" :key=\"item.post_id\" style=\"height:250px\">\n            <el-card :body-style=\"{ padding: '0px 0px' }\">\n              <div slot=\"header\">\n                <el-image\n      style=\"width: auto; height: 160px\"\n      :src=\"item.src\"\n      :preview-src-list=\"srcList\">\n    </el-image>\n  </div>\n              <el-button type=\"success\"\n                size=\"mini\"\n                icon=\"el-icon-arrow-up\"\n                style=\"padding: 1px 1px;\"\n                @click=\"like(item)\"\n              >{{item.like}}</el-button>\n              <el-button\n                size=\"mini\"\n                icon=\"el-icon-edit-outline\"\n                style=\"padding: 1px 2px;\"\n                type=\"text\"\n                class=\"button\"\n                @click=\"viewPhoto(item)\"\n              >详情</el-button>\n            </el-card>\n          </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ImageWall',\n  data() {\n    return {\n      DialogVisible: false,\n      files: '',\n      caption: '',\n      fullscreenLoading: true,\n      imagelist: [],\n      showViewer: false,\n      view_index: 0,\n      srcList: [],\n      comments: [],\n      likeCount: [],\n    };\n  },\n  props: {\n    info: {},\n  },\n  methods: {\n    UploadClick() {\n      this.DialogVisible = true;\n    },\n    getPost() {\n      this.imagelist = [];\n      this.srcList = [];\n      this.fullscreenLoading = true;\n      axios.post('/api/query-all-post', { group_id: this.$props.info.id })\n        .then((res) => {\n          let posts = [];\n          if (res.data.status) {\n            posts = res.data.post_list;\n            console.log(posts);\n            for (let i = 0; i < posts.length; i += 1) {\n              // eslint-disable-next-line\n              const src = '/api/show/' + this.$props.info.id + '/' + posts[i].media;\n              const tmp = {};\n              tmp.src = src;\n              tmp.post_id = posts[i].id;\n              tmp.caption = posts[i].caption;\n              tmp.date_created = posts[i].date_created;\n              tmp.like = posts[i].like;\n              this.likeCount[i] = tmp.like;\n              tmp.user_id = posts[i].user_id;\n              tmp.username = posts[i].username;\n              this.imagelist.push(tmp);\n              this.srcList.push(src);\n            }\n            console.log(this.imagelist);\n            this.fullscreenLoading = false;\n            console.log('like count here');\n            console.log(this.likeCount);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    like(pic) {\n      axios.post('/api/query-like', { post_id: pic.post_id, user_id: this.$route.params.userid })\n        .then((res) => {\n          if (res.data.status) {\n            if (res.data.liked) {\n              axios.post('/api/cancel-like', { post_id: pic.post_id, user_id: this.$route.params.userid })\n                .then((res2) => {\n                  if (res2.data.status) {\n                    this.$message({\n                      type: 'warning',\n                      message: '你已点赞此帖，取消点赞',\n                    });\n                    this.getPost();\n                  }\n                })\n                .catch((err2) => {\n                  console.log(err2);\n                });\n            } else {\n              axios.post('/api/like-post', { post_id: pic.post_id, user_id: this.$route.params.userid })\n                .then((res2) => {\n                  if (res2.data.status) {\n                    console.log('Liked');\n                    this.$message({\n                      type: 'success',\n                      message: '成功点赞',\n                    });\n                    this.getPost();\n                  }\n                })\n                .catch((err2) => {\n                  console.log(err2);\n                });\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    viewPhoto(item) {\n      this.$emit('viewPhoto', item);\n      // axios.post('/api/query-comment', { post_id: pic.post_id })\n      //   .then((res) => {\n      //     if (res.data.status) {\n      //       this.comments = res.data.comments_list;\n      //       console.log(this.comments);\n      //     }\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n    },\n    handleFileUpload() {\n      // eslint-disable-next-line prefer-destructuring\n      this.files = this.$refs.files.files;\n    },\n    SubmitFile() {\n      this.DialogVisible = false;\n      this.fullscreenLoading = true;\n      // eslint-disable-next-line prefer-const\n      let formData = new FormData();\n      // eslint-disable-next-line vars-on-top\n      for (let i = 0; i < this.files.length; i += 1) {\n        const file = this.files[i];\n        // eslint-disable-next-line prefer-template\n        formData.append('files[]', file);\n      }\n      formData.append('user_id', this.$route.params.userid);\n      formData.append('group_id', this.$props.info.id);\n      formData.append('caption', this.caption);\n      axios.post('/api/upload-post',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n          // eslint-disable-next-line prefer-arrow-callback\n        }).then((res) => {\n        if (res.data.status) {\n          this.$message({\n            type: 'success',\n            message: '成功上传',\n          });\n          this.getPost();\n        }\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n  created() {\n    this.getPost();\n  },\n};\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}