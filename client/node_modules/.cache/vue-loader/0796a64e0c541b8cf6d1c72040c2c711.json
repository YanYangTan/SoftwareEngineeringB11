{"remainingRequest":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\GenealogyPage.vue?vue&type=style&index=0&id=e29c9c60&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\GenealogyPage.vue","mtime":1640180189176},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1640180100267},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1640180123445},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1640099129881},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1640180138166},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640099097496},{"path":"C:\\Users\\trans\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1640180123441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIGNvbG9yOiAjMmMzZTUwOwogIG1hcmdpbi10b3A6IDMwcHg7Cn0KLnRleHQtY2VudGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMTZweDsKfQouY3VzdG9tLWNhcmQgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtaW4td2lkdGg6IDExMHB4OwogIGhlaWdodDogNTVweDsKICBwYWRkaW5nOiA1cHg7CiAgYm9yZGVyOiAwLjVweCBzb2xpZCAjZGRkOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJveC1zaGFkb3c6IDAgMCAzcHggMXB4IHJnYmEoIzAwMCwgMCk7CiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAuMnMgZWFzZTsKICAmOmhvdmVyIHsKICAgIGJveC1zaGFkb3c6IDAgMCAzcHggMXB4IHJnYmEoIzAwMCwgLjEpOwogIH0KICAmX19pbWFnZSB7CiAgICBmbGV4OiAwIDAgYXV0bzsKICAgIHdpZHRoOiAzMHB4OwogICAgaGVpZ2h0OiAzMHB4OwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZGVkZTsKICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCU7CiAgfQogICZfX2luZm8gewogICAgcGFkZGluZy1sZWZ0OiA4cHg7CiAgfQogICZfX25hbWUgewogICAgZm9udC13ZWlnaHQ6IDMwMDsKICB9CiAgJl9fYWdlIHsKICAgIG1hcmdpbi10b3A6IDJweDsKICAgIGZvbnQtc2l6ZTogNnB4OwogIH0KfQo="},{"version":3,"sources":["GenealogyPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GenealogyPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"app\">\n    <el-card>\n            <div><el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveGenealogy\">保存家谱</el-button>\n        <el-button type=\"danger\" icon=\"el-icon-refresh-right\" @click=\"clearGenealogy\">重置家谱</el-button>\n<!--      <span v-if=\"saving\">saving....</span>-->\n              <i style=\"margin-left: 20px;margin-right: 5px\" class=\"el-icon-loading\" v-if=\"saving\"></i>\n      <span  v-if=\"saving\" >保存中....</span>\n      </div>\n      <i style=\"margin-left: 50px;margin-top: 30px;margin-bottom: 30px\" class=\"el-icon-loading\" v-if=\"loading\"></i>\n      <span  v-if=\"loading\" >加载中....</span>\n\n<!--      <el-button @click=\"outputUsedtable\">test</el-button>-->\n<!--    <div class=\"text-center\">-->\n<!--&lt;!&ndash;      <h1 class=\"title\">家谱</h1>&ndash;&gt;-->\n<!--    </div>-->\n    <VueFamilyTree\n      :tree=\"tree\"\n      @card-click=\"cardClick\"\n    >\n      <template\n        v-if=\"customCard\"\n        v-slot:card=\"{item}\"\n      >\n        <el-popover\n  placement=\"right\"\n  width=\"100\"\n  trigger=\"click\">\n  <el-menu :default-openeds=\"['2']\">\n    <el-popover\n  placement=\"right\"\n  width=\"100\"\n  trigger=\"click\">\n      <el-menu :default-openeds=\"['3']\">\n        <div v-if=\"item.defined\">\n        <el-menu-item index=\"2-1\" @click=\"addMember(item,'Sibling')\">兄弟</el-menu-item>\n        <el-menu-item index=\"2-2\" @click=\"addMember(item,'Children')\">儿女</el-menu-item>\n        <el-menu-item index=\"2-3\" @click=\"addMember(item,'Honey')\">配偶</el-menu-item>\n          </div>\n        <div v-else v-for=\"user in userlist\" :key=\"user.id\">\n<el-menu-item index=\"4-1\" v-if=\"user.used===false\" @click=\"item.id=user.id;\n          item.defined=true;item.name=user.username;item.image='https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png';user.used = true;usedtable.push(user.id);this.$forceUpdate;\">{{user.username}}</el-menu-item>\n        </div>\n      </el-menu>\n    <el-menu-item  v-if=\"item.defined\" slot=\"reference\" index=\"3-2\">添加成员</el-menu-item>\n      <el-menu-item  v-if=\"!item.defined\" slot=\"reference\" index=\"3-3\">选择成员</el-menu-item>\n    </el-popover>\n    <el-menu-item  v-if=\"!item.defined\"\n                     index=\"3-4\"\n     @click=\"customizeName(item);\n            \">自定义成员</el-menu-item>\n    <el-menu-item index=\"2-4\" style=\"color: #dc0606\" @click=\"addMember(item,'Delete')\">删除</el-menu-item>\n  </el-menu>\n        <div slot=\"reference\" class=\"custom-card\"  @click=\"cardClick(item)\">\n          <div\n            :style=\"{backgroundImage: item.image ? `url(${item.image})` :  null}\"\n            class=\"custom-card__image\"\n          />\n          <div class=\"custom-card__info\">\n            <div class=\"custom-card__name\">\n              {{ item.name }}\n            </div>\n            <div\n              v-show=\"item.age\"\n              class=\"custom-card__age\"\n            >\n              Age: {{ item.age }}\n            </div>\n          </div>\n        </div>\n        </el-popover>\n      </template>\n    </VueFamilyTree>\n      </el-card>\n  </div>\n</template>\n\n<script>\nimport VueFamilyTree from 'vue-family-tree';\nimport axios from 'axios';\n\nexport default {\n  name: 'App',\n  components: {\n    VueFamilyTree,\n  },\n  props: {\n    // eslint-disable-next-line vue/require-prop-type-constructor\n    info: {},\n  },\n  data() {\n    return {\n      saving: false,\n      loading: true,\n      customCard: true,\n      usedtable: [],\n      seeable: false,\n      userlist: [],\n      nameinput: '',\n      randomnum: 0,\n      temptree: [],\n      currentchildren: [],\n      currentnode: {},\n      minus: -1,\n      uppertree: [],\n      tree: [{\n        firstPerson: {\n          name: '未定义',\n          image: 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png',\n          id: -1,\n          defined: false,\n          used: false,\n          root: true,\n        },\n      }],\n    };\n  },\n  methods: {\n    cardClick(item) {\n      console.log(item);\n      console.log(this.tree);\n    },\n    // 添加成员\n    addMember(item, type) {\n      console.log(item);\n      this.test(this.tree, item.id); // 返回选中节点和层的信息\n      console.log(this.currentchildren);\n      if (type === 'Sibling') {\n        if (item.root === true) {\n          this.$message({\n            type: 'warning',\n            message: '根无法添加兄弟',\n          });\n        } else {\n          console.log('addSibling');\n          // eslint-disable-next-line no-restricted-syntax\n          const ele = { firstPerson: { name: '未定义', id: this.minus, image: 's' } };\n          this.minus -= 1;\n          this.currentchildren.push(ele);\n        }\n      } else if (type === 'Children') {\n        const ele = { firstPerson: { name: '未定义', id: this.minus, image: 's' } };\n        this.minus -= 1;\n        if (this.currentnode.children !== undefined) {\n          this.currentnode.children.push(ele);\n        } else {\n          // eslint-disable-next-line no-param-reassign\n          this.currentnode.children = [];\n          this.currentnode.children.push(ele);\n        }\n        console.log('addChildren');\n      } else if (type === 'Honey') {\n        const ele = { name: '未定义', id: this.minus, image: 's' };\n        this.minus -= 1;\n        if (this.currentnode.firstPerson !== undefined && this.currentnode.secondPerson === undefined) { // 说明只有左节点\n          this.currentnode.secondPerson = ele;\n          this.testnum += 1;\n        } else if (this.currentnode.firstPerson === undefined && this.currentnode.secondPerson !== undefined) { // 说明只有右节点\n          this.currentnode.firstPerson = ele;\n        } else { // 说明两个节点都有\n          this.$message({\n            type: 'warning',\n            message: '无法添加配偶',\n          });\n        }\n        console.log('addHoney');\n      } else if (type === 'Delete') {\n        if (item.root === true) {\n          this.$message({\n            type: 'warning',\n            message: '根元素无法删除！',\n          });\n        } else {\n          // eslint-disable-next-line no-unused-vars\n          this.test(this.currentchildren, item.id, 'Delete', true);\n          // const ttemp = [];\n          // ttemp.push(this.currentchildren);\n          // ttemp.splice(0, 1);\n          // delete this.currentchildren;\n          // eslint-disable-next-line no-plusplus\n          for (let i = 0; i < this.uppertree.length; ++i) {\n            if (this.uppertree[i].firstPerson !== undefined && this.uppertree[i].firstPerson.id === item.id) {\n              this.uppertree.splice(i, 1);\n            } else if (this.uppertree[i].secondPerson !== undefined && this.uppertree[i].secondPerson.id === item.id) {\n              this.uppertree.splice(i, 1);\n            }\n          }\n        }\n      } else {\n        console.log('Error');\n      }\n    },\n    // 递归遍历所有节点，根据id找到对应的children数组和节点\n    test(tree, id, type, first) {\n      this.$forceUpdate();\n      let e;\n      this.temptree = tree;\n      // eslint-disable-next-line guard-for-in,no-restricted-syntax\n      for (e of this.temptree) {\n        if (type === 'Delete') {\n          if (e.firstPerson !== undefined) {\n            if (!first) {\n              this.usedtable.splice(this.usedtable.indexOf(e.firstPerson.id), 1);\n            } else if (first) {\n              this.usedtable.splice(this.usedtable.indexOf(id), 1);\n            }\n          }\n          if (e.secondPerson !== undefined) {\n            if (!first) {\n              this.usedtable.splice(this.usedtable.indexOf(e.secondPerson.id), 1);\n            } else if (first) {\n              this.usedtable.splice(this.usedtable.indexOf(id), 1);\n            }\n          }\n          // eslint-disable-next-line no-restricted-syntax\n          for (const user of this.userlist) {\n            if (e.firstPerson !== undefined) {\n              if (!first) {\n                if (user.id === e.firstPerson.id) {\n                  user.used = false;\n                }\n              } else if (first) {\n                if (user.id === id) {\n                  user.used = false;\n                }\n              }\n            }\n            if (e.secondPerson !== undefined) {\n              if (!first) {\n                if (user.id === e.secondPerson.id) {\n                  user.used = false;\n                }\n              } else if (first) {\n                if (user.id === id) {\n                  user.used = false;\n                }\n              }\n            }\n          }\n        }\n        if (e.firstPerson !== undefined && e.firstPerson.id === id) {\n          this.currentnode = e;// 当前节点，字典类型\n          this.currentchildren = this.temptree; // 当前层，数组类型\n          this.uppertree = this.temptree;\n        }\n        if (e.secondPerson !== undefined && e.secondPerson.id === id) {\n          this.currentnode = e; // 当前节点，字典类型\n          this.currentchildren = this.temptree; // 当前层，数组类型\n          this.uppertree = this.temptree; // 总是返回上一层children数组\n        }\n        if (e.children !== undefined) { // 若它不是叶子结点\n          if (type === 'Delete') {\n            this.test(e.children, id, 'Delete', false);\n          } else {\n            this.test(e.children, id, false);\n          } // 递归至下一个孩子层\n        }\n      }\n      this.$forceUpdate();\n    },\n    clearGenealogy() {\n      this.tree = [{\n        firstPerson: {\n          name: '未定义',\n          image: 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png',\n          id: -1,\n          defined: false,\n          used: false,\n          root: true,\n        },\n      }];\n      // eslint-disable-next-line no-restricted-syntax\n      for (const user of this.userlist) {\n        user.used = false;\n      }\n      this.usedtable = [];\n      this.minus = -2;\n    },\n    saveGenealogy() {\n      this.saving = true;\n      const temp = {};\n      temp.tree = this.tree;\n      temp.usedtable = this.usedtable;\n      temp.minus = this.minus;\n      axios.post('/api/save-genealogy', { group_id: this.$props.info.id, content: temp })\n        .then((res) => {\n          this.saving = false;\n          if (res.data.status) {\n            console.log(res.data.message);\n          }\n          this.$message({\n            type: 'success',\n            message: '家谱保存成功',\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    loadGenealogy() {\n      this.loading = true;\n      axios.post('/api/query-genealogy', { group_id: this.$props.info.id })\n        .then((res) => {\n          if (res.data.status) {\n            console.log(res.data.message);\n            this.tree = res.data.content.tree;\n            this.usedtable = res.data.content.usedtable;\n            this.minus = res.data.content.minus;\n            this.loading = false;\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      this.loading = true;\n      axios.post('/api/query-user', { group_id: this.$props.info.id })\n        .then((res) => {\n          this.loading = false;\n          if (res.data.status) {\n            this.$data.userlist = res.data.user_list;\n            // eslint-disable-next-line no-restricted-syntax\n            for (const user of this.userlist) { // 判断用户有没有已被家谱用过\n              // eslint-disable-next-line no-restricted-syntax\n              for (const id of this.usedtable) {\n                if (id === user.id) {\n                  user.used = true;\n                  break;\n                } else { user.used = false; }\n              }\n            }\n            console.log(this.userlist);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    outputUsedtable() {\n      console.log(this.usedtable);\n      console.log(this.userlist);\n      console.log(this.tree);\n      console.log(this.currentnode);\n      console.log(this.currentchildren);\n      console.log(this.uppertree);\n    },\n    customizeName(item) {\n      this.$prompt('输入自定义成员名', '自定义成员', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      }).then(({ value }) => {\n        if (value === null) {\n          // eslint-disable-next-line\n            value = '';\n        }\n        // eslint-disable-next-line no-param-reassign\n        item.defined = true;\n        // eslint-disable-next-line no-param-reassign\n        item.name = value;\n        // eslint-disable-next-line no-param-reassign\n        item.image = 'https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png';\n        this.$forceUpdate();\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入',\n        });\n      });\n      // let q = false;\n      // // eslint-disable-next-line no-constant-condition,no-plusplus\n      // for (let i = 0; i > 1; --i) {\n      //   this.randomnum = Math.round(Math.random() * 100000);\n      //   console.log(this.randomnum);\n      //   // eslint-disable-next-line no-restricted-syntax,no-plusplus\n      //   for (let j = 0; j < this.userlist; ++j) {\n      //     if (j === this.userlist.length - 1 && this.randomnum !== this.userlist[j].id) {\n      //       q = true;\n      //     }\n      //   }\n      //   if (q === true) {\n      //     break;\n      //   }\n      // }\n    },\n  },\n  created() {\n    this.loadGenealogy();\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 30px;\n}\n.text-center {\n  text-align: center;\n  margin-bottom: 16px;\n}\n.custom-card {\n  display: flex;\n  align-items: center;\n  min-width: 110px;\n  height: 55px;\n  padding: 5px;\n  border: 0.5px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  background-color: #fff;\n  cursor: pointer;\n  box-shadow: 0 0 3px 1px rgba(#000, 0);\n  transition: box-shadow .2s ease;\n  &:hover {\n    box-shadow: 0 0 3px 1px rgba(#000, .1);\n  }\n  &__image {\n    flex: 0 0 auto;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: #dedede;\n    background-size: cover;\n    background-position: 50%;\n  }\n  &__info {\n    padding-left: 8px;\n  }\n  &__name {\n    font-weight: 300;\n  }\n  &__age {\n    margin-top: 2px;\n    font-size: 6px;\n  }\n}\n</style>\n"]}]}