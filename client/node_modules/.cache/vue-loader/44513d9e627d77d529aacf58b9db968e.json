{"remainingRequest":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\ImageWall.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\ImageWall.vue","mtime":1640098495598},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640092990984},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1640092984154},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640092990984},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1640093009872}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ltYWdlV2FsbCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVzOiAnJywKICAgICAgY2FwdGlvbjogJycsCiAgICAgIGZ1bGxzY3JlZW5Mb2FkaW5nOiB0cnVlLAogICAgICBpbWFnZWxpc3Q6IFtdLAogICAgICBzaG93Vmlld2VyOiBmYWxzZSwKICAgICAgdmlld19pbmRleDogMCwKICAgICAgc3JjTGlzdDogW10sCiAgICAgIGNvbW1lbnRzOiBbXSwKICAgICAgbGlrZUNvdW50OiBbXSwKICAgIH07CiAgfSwKICBwcm9wczogewogICAgaW5mbzoge30sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRQb3N0KCkgewogICAgICB0aGlzLmltYWdlbGlzdCA9IFtdOwogICAgICB0aGlzLnNyY0xpc3QgPSBbXTsKICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IHRydWU7CiAgICAgIGF4aW9zLnBvc3QoJy9hcGkvcXVlcnktYWxsLXBvc3QnLCB7IGdyb3VwX2lkOiB0aGlzLiRwcm9wcy5pbmZvLmlkIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbGV0IHBvc3RzID0gW107CiAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7CiAgICAgICAgICAgIHBvc3RzID0gcmVzLmRhdGEucG9zdF9saXN0OwogICAgICAgICAgICBjb25zb2xlLmxvZyhwb3N0cyk7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zdHMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgICAgICBjb25zdCBzcmMgPSAnL2FwaS9zaG93LycgKyB0aGlzLiRwcm9wcy5pbmZvLmlkICsgJy8nICsgcG9zdHNbaV0ubWVkaWE7CiAgICAgICAgICAgICAgY29uc3QgdG1wID0ge307CiAgICAgICAgICAgICAgdG1wLnNyYyA9IHNyYzsKICAgICAgICAgICAgICB0bXAucG9zdF9pZCA9IHBvc3RzW2ldLmlkOwogICAgICAgICAgICAgIHRtcC5jYXB0aW9uID0gcG9zdHNbaV0uY2FwdGlvbjsKICAgICAgICAgICAgICB0bXAuZGF0ZV9jcmVhdGVkID0gcG9zdHNbaV0uZGF0ZV9jcmVhdGVkOwogICAgICAgICAgICAgIHRtcC5saWtlID0gcG9zdHNbaV0ubGlrZTsKICAgICAgICAgICAgICB0aGlzLmxpa2VDb3VudFtpXSA9IHRtcC5saWtlOwogICAgICAgICAgICAgIHRtcC51c2VyX2lkID0gcG9zdHNbaV0udXNlcl9pZDsKICAgICAgICAgICAgICB0bXAudXNlcm5hbWUgPSBwb3N0c1tpXS51c2VybmFtZTsKICAgICAgICAgICAgICB0aGlzLmltYWdlbGlzdC5wdXNoKHRtcCk7CiAgICAgICAgICAgICAgdGhpcy5zcmNMaXN0LnB1c2goc3JjKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmltYWdlbGlzdCk7CiAgICAgICAgICAgIHRoaXMuZnVsbHNjcmVlbkxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ2xpa2UgY291bnQgaGVyZScpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxpa2VDb3VudCk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycikgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBsaWtlKHBpYykgewogICAgICBheGlvcy5wb3N0KCcvYXBpL3F1ZXJ5LWxpa2UnLCB7IHBvc3RfaWQ6IHBpYy5wb3N0X2lkLCB1c2VyX2lkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcmlkIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgaWYgKHJlcy5kYXRhLnN0YXR1cykgewogICAgICAgICAgICBpZiAocmVzLmRhdGEubGlrZWQpIHsKICAgICAgICAgICAgICBheGlvcy5wb3N0KCcvYXBpL2NhbmNlbC1saWtlJywgeyBwb3N0X2lkOiBwaWMucG9zdF9pZCwgdXNlcl9pZDogdGhpcy4kcm91dGUucGFyYW1zLnVzZXJpZCB9KQogICAgICAgICAgICAgICAgLnRoZW4oKHJlczIpID0+IHsKICAgICAgICAgICAgICAgICAgaWYgKHJlczIuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfkvaDlt7LngrnotZ7mraTluJbvvIzlj5bmtojngrnotZ4nLAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0UG9zdCgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKChlcnIyKSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycjIpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgYXhpb3MucG9zdCgnL2FwaS9saWtlLXBvc3QnLCB7IHBvc3RfaWQ6IHBpYy5wb3N0X2lkLCB1c2VyX2lkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcmlkIH0pCiAgICAgICAgICAgICAgICAudGhlbigocmVzMikgPT4gewogICAgICAgICAgICAgICAgICBpZiAocmVzMi5kYXRhLnN0YXR1cykgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdMaWtlZCcpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+aIkOWKn+eCuei1nicsCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRQb3N0KCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycjIpID0+IHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyMik7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSk7CiAgICB9LAogICAgdmlld1Bob3RvKGl0ZW0pIHsKICAgICAgdGhpcy4kZW1pdCgndmlld1Bob3RvJywgaXRlbSk7CiAgICAgIC8vIGF4aW9zLnBvc3QoJy9hcGkvcXVlcnktY29tbWVudCcsIHsgcG9zdF9pZDogcGljLnBvc3RfaWQgfSkKICAgICAgLy8gICAudGhlbigocmVzKSA9PiB7CiAgICAgIC8vICAgICBpZiAocmVzLmRhdGEuc3RhdHVzKSB7CiAgICAgIC8vICAgICAgIHRoaXMuY29tbWVudHMgPSByZXMuZGF0YS5jb21tZW50c19saXN0OwogICAgICAvLyAgICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbW1lbnRzKTsKICAgICAgLy8gICAgIH0KICAgICAgLy8gICB9KQogICAgICAvLyAgIC5jYXRjaCgoZXJyKSA9PiB7CiAgICAgIC8vICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICAvLyAgIH0pOwogICAgfSwKICAgIGhhbmRsZUZpbGVVcGxvYWQoKSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZwogICAgICB0aGlzLmZpbGVzID0gdGhpcy4kcmVmcy5maWxlcy5maWxlczsKICAgIH0sCiAgICBTdWJtaXRGaWxlKCkgewogICAgICB0aGlzLmZ1bGxzY3JlZW5Mb2FkaW5nID0gdHJ1ZTsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdAogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHZhcnMtb24tdG9wCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5maWxlcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIGNvbnN0IGZpbGUgPSB0aGlzLmZpbGVzW2ldOwogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItdGVtcGxhdGUKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVzW10nLCBmaWxlKTsKICAgICAgfQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VzZXJfaWQnLCB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcmlkKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdncm91cF9pZCcsIHRoaXMuJHByb3BzLmluZm8uaWQpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2NhcHRpb24nLCB0aGlzLmNhcHRpb24pOwogICAgICBheGlvcy5wb3N0KCcvYXBpL3VwbG9hZC1wb3N0JywKICAgICAgICBmb3JtRGF0YSwKICAgICAgICB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgICB9LAogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1hcnJvdy1jYWxsYmFjawogICAgICAgIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXMpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfmiJDlip/kuIrkvKAnLAogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLmdldFBvc3QoKTsKICAgICAgICB9CiAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0UG9zdCgpOwogIH0sCn07Cg=="},{"version":3,"sources":["ImageWall.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageWall.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <h2>Multiple File</h2>\n      <hr/>\n      <label>Files\n        <input type=\"file\" id=\"files\" ref=\"files\" multiple v-on:change=\"handleFileUpload( $event )\"/>\n      </label>\n      <label>Caption\n        <input type=\"text\" v-model=\"caption\"/>\n      </label>\n      <br>\n      <el-button v-on:click=\"SubmitFile()\">Submit</el-button>\n    </div>\n    <el-row :gutter=\"20\" v-loading.fullscreen.lock=\"fullscreenLoading\">\n          <el-col :span=\"4\" v-for=\"item in imagelist\" :key=\"item.post_id\" style=\"height:250px\">\n            <el-card :body-style=\"{ padding: '0px 0px' }\">\n              <div slot=\"header\">\n                <el-image\n      style=\"width: auto; height: 160px\"\n      :src=\"item.src\"\n      :preview-src-list=\"srcList\">\n    </el-image>\n  </div>\n              <el-button type=\"success\"\n                size=\"mini\"\n                icon=\"el-icon-arrow-up\"\n                style=\"padding: 1px 1px;\"\n                @click=\"like(item)\"\n              >{{item.like}}</el-button>\n              <el-button\n                size=\"mini\"\n                icon=\"el-icon-edit-outline\"\n                style=\"padding: 1px 2px;\"\n                type=\"text\"\n                class=\"button\"\n                @click=\"viewPhoto(item)\"\n              >详情</el-button>\n            </el-card>\n          </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ImageWall',\n  data() {\n    return {\n      files: '',\n      caption: '',\n      fullscreenLoading: true,\n      imagelist: [],\n      showViewer: false,\n      view_index: 0,\n      srcList: [],\n      comments: [],\n      likeCount: [],\n    };\n  },\n  props: {\n    info: {},\n  },\n  methods: {\n    getPost() {\n      this.imagelist = [];\n      this.srcList = [];\n      this.fullscreenLoading = true;\n      axios.post('/api/query-all-post', { group_id: this.$props.info.id })\n        .then((res) => {\n          let posts = [];\n          if (res.data.status) {\n            posts = res.data.post_list;\n            console.log(posts);\n            for (let i = 0; i < posts.length; i += 1) {\n              // eslint-disable-next-line\n              const src = '/api/show/' + this.$props.info.id + '/' + posts[i].media;\n              const tmp = {};\n              tmp.src = src;\n              tmp.post_id = posts[i].id;\n              tmp.caption = posts[i].caption;\n              tmp.date_created = posts[i].date_created;\n              tmp.like = posts[i].like;\n              this.likeCount[i] = tmp.like;\n              tmp.user_id = posts[i].user_id;\n              tmp.username = posts[i].username;\n              this.imagelist.push(tmp);\n              this.srcList.push(src);\n            }\n            console.log(this.imagelist);\n            this.fullscreenLoading = false;\n            console.log('like count here');\n            console.log(this.likeCount);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    like(pic) {\n      axios.post('/api/query-like', { post_id: pic.post_id, user_id: this.$route.params.userid })\n        .then((res) => {\n          if (res.data.status) {\n            if (res.data.liked) {\n              axios.post('/api/cancel-like', { post_id: pic.post_id, user_id: this.$route.params.userid })\n                .then((res2) => {\n                  if (res2.data.status) {\n                    this.$message({\n                      type: 'warning',\n                      message: '你已点赞此帖，取消点赞',\n                    });\n                    this.getPost();\n                  }\n                })\n                .catch((err2) => {\n                  console.log(err2);\n                });\n            } else {\n              axios.post('/api/like-post', { post_id: pic.post_id, user_id: this.$route.params.userid })\n                .then((res2) => {\n                  if (res2.data.status) {\n                    console.log('Liked');\n                    this.$message({\n                      type: 'success',\n                      message: '成功点赞',\n                    });\n                    this.getPost();\n                  }\n                })\n                .catch((err2) => {\n                  console.log(err2);\n                });\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    viewPhoto(item) {\n      this.$emit('viewPhoto', item);\n      // axios.post('/api/query-comment', { post_id: pic.post_id })\n      //   .then((res) => {\n      //     if (res.data.status) {\n      //       this.comments = res.data.comments_list;\n      //       console.log(this.comments);\n      //     }\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n    },\n    handleFileUpload() {\n      // eslint-disable-next-line prefer-destructuring\n      this.files = this.$refs.files.files;\n    },\n    SubmitFile() {\n      this.fullscreenLoading = true;\n      // eslint-disable-next-line prefer-const\n      let formData = new FormData();\n      // eslint-disable-next-line vars-on-top\n      for (let i = 0; i < this.files.length; i += 1) {\n        const file = this.files[i];\n        // eslint-disable-next-line prefer-template\n        formData.append('files[]', file);\n      }\n      formData.append('user_id', this.$route.params.userid);\n      formData.append('group_id', this.$props.info.id);\n      formData.append('caption', this.caption);\n      axios.post('/api/upload-post',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n          // eslint-disable-next-line prefer-arrow-callback\n        }).then((res) => {\n        if (res.data.status) {\n          this.$message({\n            type: 'success',\n            message: '成功上传',\n          });\n          this.getPost();\n        }\n      })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n  created() {\n    this.getPost();\n  },\n};\n</script>\n\n<style scoped>\n\n</style>\n"]}]}