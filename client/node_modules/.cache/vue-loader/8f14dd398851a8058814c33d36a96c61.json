{"remainingRequest":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\GroupList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\src\\components\\GroupList.vue","mtime":1640167717753},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1640165329170},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1640165341319},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1640165336647},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640165327016},{"path":"C:\\Users\\Laggy pc\\Documents\\GitHub\\SoftwareEngineeringB11\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1640165341316}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmdyb3VwLWxpc3R7DQogIG1hcmdpbi10b3A6IDEwcHg7DQp9DQouZWwtY29sLTN7DQogIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1pbi1vdXQ7DQp9DQouZWwtY29sLTM6aG92ZXJ7DQogIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7DQogIHotaW5kZXg6IDE7DQp9DQo="},{"version":3,"sources":["GroupList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-button class=\"el-icon-circle-plus\" type=\"primary\" @click=\"createGroup\"> 创建群组</el-button>\r\n    <el-button class=\"el-icon-connection\" type=\"primary\" @click=\"joinGroup\"> 加入群组</el-button>\r\n    <div class=\"group-list\" v-loading.fullscreen.lock=\"fullscreenLoading\">\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"3\" v-for=\"item in grouplist\" :key=\"item.id\" style=\"height:200px\">\r\n          <el-card :body-style=\"{ padding: '0px 0px' }\" >\r\n\r\n            <div slot=\"header\">\r\n              <img src=\"../assets/logo.png\" style=\"width:100px;height:100px;\" @click=\"groupPage(item)\" class=\"head_audio\" />\r\n            </div>\r\n            <!-- here to fix text -->\r\n<!--            <span style=\"font-size: 15px;\">{{item.group_name}}</span>-->\r\n            <el-button size=\"mini\" icon=\"el-icon-edit-outline\" style=\"padding: 1px 1px;\" type=\"text\"\r\n                       class=\"button\" @click=\"groupPage(item)\">{{item.group_name}}</el-button>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'app',\r\n  data() {\r\n    return {\r\n      fullscreenLoading: true,\r\n      grouplist: [],\r\n      userid: '',\r\n    };\r\n  },\r\n  methods:\r\n    {\r\n      // eslint-disable-next-line camelcase,no-unused-vars\r\n      groupPage(item) {\r\n        this.$emit('groupPage', item);\r\n      },\r\n      getQuery() {\r\n        this.fullscreenLoading = true;\r\n        axios.post('/api/query-group', { user_id: this.$route.params.userid })\r\n          .then((res) => {\r\n            if (res.data.status) {\r\n              //               data { status, message, group_list }\r\n              // group_list [{ “id：群组ID”, “group_name：群组名字”, “admin”：用户是否是群主},...]\r\n              this.grouplist = res.data.group_list;\r\n              this.$emit('defaultGroup', this.grouplist[0]);\r\n              this.fullscreenLoading = false;\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      },\r\n      createGroup() {\r\n        this.$prompt('为你的新群取一个好听的名字', '群组创建', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n        }).then(({ value }) => {\r\n          if (value === null) {\r\n            // eslint-disable-next-line\r\n            value = '';\r\n          }\r\n          axios.post('/api/create-group', { user_id: this.$route.params.userid, group_name: value })\r\n            .then((res) => {\r\n              // eslint-disable-next-line no-unused-vars\r\n              let str;\r\n              let messagetype;\r\n              if (res.data.status) {\r\n                this.grouplist.push({ id: res.data.group_id, group_name: value, admin: true });\r\n                messagetype = 'success';\r\n                str = `成功创建群组，名为：${value} 邀请码为 ${res.data.invite_key}`;\r\n                // eslint-disable-next-line no-empty\r\n              } else {\r\n                str = '创建失败';\r\n                messagetype = 'warning';\r\n              }\r\n              this.$message({\r\n                type: messagetype,\r\n                message: str,\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消输入',\r\n          });\r\n        });\r\n      },\r\n      joinGroup() {\r\n        this.$prompt('输入邀请码', '加入', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n        }).then(({ value }) => {\r\n          axios.post('/api/join-group', { user_id: this.$route.params.userid, invite_key: value })\r\n            .then((res) => {\r\n              // eslint-disable-next-line no-unused-vars\r\n              let str;\r\n              let messagetype;\r\n              if (res.data.status) {\r\n                str = '成功加入';\r\n                messagetype = 'success';\r\n                this.getQuery();\r\n              } else {\r\n                str = '加入失败';\r\n                messagetype = 'warning';\r\n              }\r\n              this.$message({\r\n                type: messagetype,\r\n                message: str,\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '取消输入',\r\n          });\r\n        });\r\n      },\r\n    },\r\n  created() {\r\n    this.getQuery();\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.group-list{\r\n  margin-top: 10px;\r\n}\r\n.el-col-3{\r\n  transition: all .2s ease-in-out;\r\n}\r\n.el-col-3:hover{\r\n  transform: scale(1.05);\r\n  z-index: 1;\r\n}\r\n</style>\r\n"]}]}